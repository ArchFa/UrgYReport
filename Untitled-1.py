# %%
import pandas as pd
import streamlit as st
import plotly.express as px
import numpy as np


# %%
################################### –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã ###################################

# %%
st.title("–î–∞—à–±–æ—Ä–¥ UrgY")

# %%
################################### –æ—Å–Ω–æ–≤–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è ###################################

# %%
count_task = st.file_uploader("–í—ã–±–∏—Ä–µ—Ç–µ —Ñ–∞–π–ª")


use_example_file = st.checkbox(
    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä –≤—ã–≥—Ä—É–∑–∫–∏", False, help="–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è –≤—ã–≥—Ä—É–∑–∫–∞, c 1 –∞–ø—Ä–µ–ª—è –ø–æ 1 –∏—é–ª—è"
)

# –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
if use_example_file:
    count_task = "offers_statuses_04_01_07_01.txt"

# –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
if count_task:
    df = pd.read_csv(count_task, sep='|')
    df = df.dropna()

    df.columns = ['offer_id', 'offer_created_at','platform','count_responds', 'count_prematch']

    df['offer_created_at'] = pd.to_datetime(df['offer_created_at'])
    df.offer_created_at = df.offer_created_at.values.astype('M8[D]')

    df['count_responds'] = df['count_responds'].astype(int)
    df['count_prematch'] = df['count_prematch'].astype(int)

    df['platform'] = df['platform'].str.strip()

st.info(
        f"""
             üëÜ –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º csv –∏–ª–∏ txt. –í —Ñ–∞–π–ª–µ –¥–æ–ª–∂–Ω—ã —Å—Ç–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã:
             - id –æ—Ñ—Ñ–µ—Ä–∞
             - –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞
             - –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞
             - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–º–∞—Ç—á–µ–π –Ω–∞ –∑–∞–¥–∞—á—É
             - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π –Ω–∞ –∑–∞–¥–∞—á—É
             """
    )

if not count_task or not use_example_file:
        st.stop()

# %%
df['month'] = df['offer_created_at'].dt.month

# %%
# df = pd.read_csv("/Users/arturfattahov/Downloads/Telegram Desktop/offers_statuses_04_01_07_01.txt", sep='|')

# df = df.dropna()

# df.columns = ['offer_id', 'offer_created_at','platform','count_responds', 'count_prematch']

# df['offer_created_at'] = pd.to_datetime(df['offer_created_at'])
# df.offer_created_at = df.offer_created_at.values.astype('M8[D]')

# df['count_responds'] = df['count_responds'].astype(int)
# df['count_prematch'] = df['count_prematch'].astype(int)

# df['platform'] = df['platform'].str.strip()
# df['month'] = df['offer_created_at'].dt.month

# %%
################################## –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤ –≤ –º–µ—Å—è—Ü —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
# —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤ –≤ –º–µ—Å—è—Ü"

offers_count_month = (
    df.query('platform != "''"')
    .pivot_table(index=["month", "platform"], values='offer_id', aggfunc='count'))

offers_count_month = offers_count_month.reset_index()

# %%
df_mobile = df
################################## –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ñ—Ñ–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
# –º–µ–Ω—è–µ–º ios –∏ android –Ω–∞ mobile

df_mobile['platform'] = np.where((df_mobile.platform == "ios"), "mobile", df_mobile.platform)
df_mobile['platform'] = np.where((df_mobile.platform == "android"), "mobile", df_mobile.platform)


# –¥–∞—Ç–∞—Ñ—Ä–µ–π–º —Å–æ –≤—Å–µ–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –≤ –º–µ—Å—è—Ü, –±–µ–∑ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
all_task_month = (
    df_mobile.query('platform != "''"')
    .pivot_table(index=["month"], values='offer_id', aggfunc='count'))
all_task_month = all_task_month.reset_index()


# –¥–∞—Ç–∞—Ñ—Ä–µ–π–º —Å –∑–∞–¥–∞—á–∞–º–∏ —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
percentage_tasks_mobile = (
    df_mobile.query('platform == "mobile"')
    .pivot_table(index=["month"], values='offer_id', aggfunc='count'))
percentage_tasks_mobile = percentage_tasks_mobile.reset_index()


# –º–µ—Ä–¥–∂ –¥–≤—É—Ö —Ç–∞–±–ª–∏—Ü
percentage_tasks_mobile = percentage_tasks_mobile.merge(all_task_month, left_on='month', right_on='month')
percentage_tasks_mobile.columns = ['month', 'mobile', 'all']


# —Ä–∞—Å—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
percentage_tasks_mobile['percentage_mobile'] = percentage_tasks_mobile['mobile'] * 100 / percentage_tasks_mobile['all']
percentage_tasks_mobile['percentage_mobile'] = percentage_tasks_mobile['percentage_mobile'].round(2)

# %%
################################### –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã ###################################

# %%
# bar "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤ –≤ –º–µ—Å—è—Ü"

cx = px.bar(offers_count_month, x='month', y='offer_id',
            color='platform',
            height=700,
            title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤ –≤ –º–µ—Å—è—Ü",
            labels={'offer_id':'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ—Ñ—Ñ–µ—Ä–æ–≤', 'platform':'–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è'},
            barmode = 'group',
            text_auto=True)
cx.show()

# %%
# bar –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ñ—Ñ–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

cxx = px.bar(percentage_tasks_mobile, x='month', y='percentage_mobile',
            height=700,
            width=500,
            title="–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ñ—Ñ–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            labels={'month':'–ú–µ—Å—è—Ü', 'percentage_mobile':'–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'},
            text_auto=True)
cxx.show()

# %%



